{"version":3,"sources":["components/HellowMessageRC.js","components/RFvsRC.js","components/1-task/InputNameRC.js","components/1-task/ShowNameUser.js","components/1-task/InteractiveComponent.js","App.js","index.js"],"names":["HelloMessageRC","this","props","name","React","WelcomeRF","WelcomeRC","InputNameRC","handleChange","bind","event","handlerInputValue","target","value","inputValue","type","onChange","ShowNameUser","description","show","InteractiveComponentRC","handlerUserNameChange","state","valueName","userName","setState","console","log","App","className","style","backgroundColor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6NAEqBA,E,4JACnB,WACE,OACE,8BACE,yCAAYC,KAAKC,MAAMC,KAAvB,a,GAJoCC,aCArC,SAASC,EAAUH,GACxB,OAAO,mDAAYA,EAAMC,KAAlB,OAGF,IAAMG,EAAb,4JACE,WACE,OAAO,mDAAYL,KAAKC,MAAMC,KAAvB,WAFX,GAA+BC,a,WCJlBG,EAAb,kDACE,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,EADrB,gDAME,SAAaC,GACXT,KAAKC,MAAMS,kBAAkBD,EAAME,OAAOC,SAP9C,oBAUE,WAEE,IAAMC,EAAab,KAAKC,MAAMY,WAC9B,OACE,+CAEE,uBAAOC,KAAK,OAAOF,MAAOC,EAAYE,SAAUf,KAAKO,sBAhB7D,GAAiCJ,aCA1B,SAASa,EAAaf,GAC3B,OACE,4BACE,mCACGA,EAAMgB,YADT,IACuBhB,EAAMiB,UCF5B,IAAMC,EAAb,kDACE,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAEDM,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKY,sBAAwB,EAAKA,sBAAsBZ,KAA3B,gBAC7B,EAAKa,MAAQ,CAAEC,UAAW,kBAAcC,SAAU,QALjC,EADrB,gDAWE,SAAad,GACXT,KAAKwB,SAAS,CAAEF,UAAWb,EAAME,OAAOC,UAZ5C,mCAcE,SAAsBW,GACpBvB,KAAKwB,SAAS,CAAED,eAfpB,oBAkBE,WACE,IAAMD,EAAYtB,KAAKqB,MAAMC,UACvBC,EAAWvB,KAAKqB,MAAME,SAE5B,OADAE,QAAQC,IAAI,QAAS1B,KAAKqB,OAExB,eAAC,WAAD,WACE,gCACE,uBAAOT,MAAOU,EAAWP,SAAUf,KAAKO,eACxC,cAACS,EAAD,CAAcC,YAAY,mBAAcC,KAAMI,OAEhD,uBACA,gCACE,cAAC,EAAD,CACET,WAAYU,EACZb,kBAAmBV,KAAKoB,wBAE1B,cAACJ,EAAD,CAAcC,YAAY,aAAaC,KAAMK,cAlCvD,GAA4CpB,aCA7B,SAASwB,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,kDACA,wEACA,uBACA,uDACA,cAAC,EAAD,CAAiB1B,KAAK,UACtB,cAACE,EAAD,CAAWF,KAAK,SAChB,cAAC,EAAD,CAAWA,KAAK,YAChB,uBACA,qBAAK2B,MAAO,CAAEC,gBAAiB,UAA/B,4BACA,uBACA,cAAC,EAAD,OCZN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACR,EAAD,MAEFI,K","file":"static/js/main.8b7b16e8.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nexport default class HelloMessageRC extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Witaj, {this.props.name}!</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function WelcomeRF(props) {\r\n  return <h1>Cześć, {props.name}!</h1>;\r\n}\r\n\r\nexport class WelcomeRC extends React.Component {\r\n  render() {\r\n    return <h1>Cześć, {this.props.name}!</h1>;\r\n  }\r\n}\r\n\r\n/* Bez względu na to, czy zadeklarujesz komponent jako funkcję czy klasę,\r\n   nie może on nigdy modyfikować swoich właściwości. \r\n\r\n   pure function\r\n   - mogą dokonywać operacji na argumentach ale nie mogą ich zmieniać\r\n   */\r\nexport function sum(a, b) {\r\n  return a + b;\r\n}\r\n\r\n// ZŁE PODEJŚCIE !!! Zmiana wartości argomentów!\r\n/*\r\nfunction withdraw(account, amount) {\r\n  account.total -= amount;\r\n}\r\n*/\r\n// PYTANIE?  -  obczaj czemu nie musze eksportu robić w ten sposób\r\n// export default { WelcomeRF };\r\n\r\n/*\r\nComponent Fprops === Class - ES6 równoważność użytkowa dla React JS\r\n\r\nPisowania Componentu z dużej litery - wówczas react wie że nie jest to HTML tag i PRZEKAZUJE MU JSX-owe atrybuty komponentów potomnych! CLOU\r\n - mała litera -> tag drzewa DOM\r\n - Duża litera -> nadanie zakresu/zasięgu scope \r\n*/\r\n","import * as React from \"react\";\r\n\r\nexport class InputNameRC extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.handlerInputValue(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    const inputValue = this.props.inputValue;\r\n    return (\r\n      <label>\r\n        Imię:\r\n        <input type=\"text\" value={inputValue} onChange={this.handleChange} />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function ShowNameUser(props) {\r\n  return (\r\n    <p>\r\n      <strong>\r\n        {props.description} {props.show}\r\n      </strong>\r\n    </p>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { InputNameRC } from \"./InputNameRC\";\r\nimport { ShowNameUser } from \"./ShowNameUser\";\r\n\r\nexport class InteractiveComponentRC extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Poniższe wiązanie jest niezbędne do prawidłowego przekazania `this` przy wywołaniu funkcji\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handlerUserNameChange = this.handlerUserNameChange.bind(this);\r\n    this.state = { valueName: \"Podaj imię\", userName: \"User\" };\r\n  }\r\n\r\n  //Doczytać o this.setState((prevState, props) =>\r\n  // a następnie o useRef\r\n  handleChange(event) {\r\n    this.setState({ valueName: event.target.value });\r\n  }\r\n  handlerUserNameChange(userName) {\r\n    this.setState({ userName });\r\n  }\r\n\r\n  render() {\r\n    const valueName = this.state.valueName;\r\n    const userName = this.state.userName;\r\n    console.log(\"state\", this.state);\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <input value={valueName} onChange={this.handleChange} />\r\n          <ShowNameUser description=\"Twoje imię:\" show={valueName} />\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          <InputNameRC\r\n            inputValue={userName}\r\n            handlerInputValue={this.handlerUserNameChange}\r\n          />\r\n          <ShowNameUser description=\"User name:\" show={userName} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import \"./styles.css\";\nimport HellowMessageRC from \"./components/HellowMessageRC\";\nimport { WelcomeRF, WelcomeRC } from \"./components/RFvsRC\";\nimport { InteractiveComponentRC } from \"./components/1-task/InteractiveComponent\";\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <p>Hello CodeSandbox</p>\n      <p>Start editing to see some magic happen!</p>\n      <hr />\n      <p> warming-up exercises </p>\n      <HellowMessageRC name=\"Marek\" />\n      <WelcomeRF name=\"Olek\" />\n      <WelcomeRC name=\"Natalia\" />\n      <hr />\n      <div style={{ backgroundColor: \"yellow\" }}>VVV TASK 1 VVV</div>\n      <hr />\n      <InteractiveComponentRC />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}